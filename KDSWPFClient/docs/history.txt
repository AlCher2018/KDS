История изменений приложения KDSWPFClient.exe - кухонный дисплей (RAM 50-70 Mb)
================================================================

[Версия 2.0.1.4]
2017-12-15 Добавлена возможность группировки блюд с суммированием количества порций. 
В окне настроек это делается флажком  , в файле AppSettings.config - элементом IsDishGroupAndSumQuatity.


[Версия 2.0.1.3]
2017-12-14 Увеличена скорость отрисовки панелей при листании страниц.
Устранен баг отсутствия мелодии при потере связи со службой и отображения заказов при возобновлении связи с кдс-службой.
2017-12-14 Пофиксен баг удаления из текущей страницы первого заказа, когда в нем выдавали первое блюдо.
Пофиксен баг открытия окна изменения статуса при кликах по кнопкам листания страниц.


[Версия 2.0.1.2]
2017-12-07 В AppSettings.config добавлены следующие элементы управления размером шрифтов панели заказов: 
	OrderPanelHdrLabelFontSize - размер шрифта меток полей в заголовке заказа,
	OrderPanelHdrTableNameFontSize - размер шрифта наименования стола в заголовке заказа,
	OrderPanelHdrOrderNumberFontSize - размер шрифта номера заказа в заголовке заказа,
	OrderPanelHdrWaiterNameFontSize - размер шрифта наименования официанта в заголовке заказа,
	OrderPanelHdrOrderCreateDateFontSize - размер шрифта даты создания заказа в заголовке заказа,
	OrderPanelHdrOrderTimerFontSize - размер шрифта таймера заказа в заголовке заказа,
	OrderPanelDishTblHeaderFontSize - размер шрифта шапки таблицы блюд,
	OrderPanelDishIndexFontSize - размер шрифта порядкового номера блюда в списке блюд,
	OrderPanelDishNameFontSize - размер шрифта наименования блюда в списке блюд,
	OrderPanelIngrNameFontSize - размер шрифта наименования ингредиента (или доп.направл.печати) в списке блюд,
	OrderPanelDishCommentFontSize - размер шрифта любых комментариев к блюду, например модификаторы,
	OrderPanelDishQuantityFontSize - размер шрифта количества порций блюда,
	OrderPanelDishTimerFontSize - размер шрифта таймера блюда.
Для настройки цветов элементов панели заказов в файле AppSettings.config используются следующие элементы:
	waitingCook - ОЖИДАНИЕ начала готовки: Ручной запуск начала приготовления.
	estimateCook - ПЛАНОВОЕ ВРЕМЯ приготовления: блюдо находится в ожидании ручного запуска начала приготовления.
	estimateStart - ОТЛОЖЕННЫЙ СТАРТ: автоматический старт начала приготовления после окончания отсчета.
	statusCooking - Блюдо находится В ПРОЦЕССЕ приготовления: таймер показывает оставшееся время приготовления.
	statusCookingOver - Блюдо находится В ПРОЦЕССЕ приготовления: таймер показывает количество просроченного времени.
	statusReady - Отображается таймер обратного отсчета планового времени выноса блюда.
	statusReadyOver - Отображается таймер просроченного времени выноса блюда.
	readyConfirmedReady - Отображается таймер автоматического перехода в ПодтвГотово.
	readyConfirmed - Подтверждение готовности: отображается таймер обратного отсчета планового времени выноса блюда.
	readyConfirmedOver - Подтверждение готовности: отображается таймер просроченного времени выноса блюда.
	statusCancelled - Блюдо/заказ ОТМЕНЕНО.
	statusTook - Блюдо/заказ ВЫДАНО.
	statusCommit - Блюдо/заказ ЗАФИКСИРОВАНО.
	statusCancelConfirmed - Отмена ПОДТВЕРЖДЕНА.
	orderHeaderTimer - Таймер в заголовке заказа.
	dishLineBase - Строка блюда.
	ingrLineBase - Строка ингредиента.
	pageBreak - Разделитель разрыва заказа на странице.
***	Внимание!!! Кисти задаются парой значений [цвет шрифта]|[цвет фона], разделенных "|". 
  В качестве цвета может быть или наименование цвета или значения RGB, разделенные ";". 
  Например, 
		<add key="waitingCook" value="Black|Plum"/>
		или
		<add key="waitingCook" value="0;0;0|221;160;221"/>
	Для определения наименования или RGB цвета можно воспользоваться утилитой ColorViewer.exe. В ней можно выбрать цвет текста и фона как с помощью выпадающих списков, так и из контекстного меню, и скопировать в буфер обмена строку выбранных цветов для вставки в AppSettings.config.


[Версия 2.0.1.1]
2017-12-04 Имя КДС-клиента состоит из двух частей: имя компьютера и имя клиента из AppSettings.config
  <!-- УНИКАЛЬНОЕ ИМЯ КДС-КЛИЕНТА -->
  <add key="KDSClientName" value="uniqClientName"/>
  ВНИМАНИЕ!!!  При разворачивании приложения на клиентском компьютере, ОБЯЗАТЕЛЬНО указать уникальное имя кдс-клиента!!!
  Это особенно важно, когда на одном физическом сервере, разворачивается несколько кдс-клиентов из разных папок. В этом случае, в каждой папке в файле AppSettings.config, нужно указать уникальное имя кдс-клиента.
В psw-файл можно добавить имя приложения и его guid.
2017-12-05 Исправлен баг при формировании hwi-файла.

[Версия 2.0.1.0]
2017-11-28 Фильтрация и группировка заказов для конкретного клиента осуществляется сервисом. Для этого клиент передает сервису условия фильтрации (по цеху и отображаемому статусу) и группировки заказов (по времени или по заказам). Также, клиент передает сервису Id заказа и блюда, начиная с которых необходимо получить данные, направление просмотра (вперед/назад) и приблизительное количество позиций заказов. Это позволяет ограничить объем данных, передаваемых по сети.
Служба возвращает клиенту не только фрагмент набора заказов, но и признаки наличия данных перед и после этого фрагмента (для показа кнопок листания назад/вперед соотв.), признак появления нового заказа (для проигрывания звукового файла).
При старте приложения в сплэш-окне выводятся сообщения о процессе загрузки и инициализации приложения.
Обновлена библиотека IntegraLib, проведен рефакторинг кода. При старте, в лог выводится полное имя и версия exe-файла и библиотеки IntegraLib.
Приложение защищено psw-файлом. Внимание!!! Файл ОБЯЗАТЕЛЬНО должен иметь имя KDSWPFClient.psw !!!
Для зависимого ингредиента (подчиненная позиция) добавлен флажок в форме настройки для вкл/выкл отображения таймера (элемент ShowTimerOnDependIngr в AppSettings.config):
  <!-- отображать ли на ЗАВИСИМЫХ ингредиентах таймеры -->
  <add key="ShowTimerOnDependIngr" value="false"/>
2017-11-30 При включенном флажке двухэтапного состояния Готово/ПодтвГотово, служба автоматически переводит статус блюда из Готово в ПодтвГотово, если период этого перехода не равен 0. Для этого в файле KDSServiceAppSettings.config кдс-службы есть элемент AutoGotoReadyConfirmPeriod:
  <!-- Время, в СЕКУНДАХ, автоматического перехода из Готово в ПодтвГотово, при включенном ПодтвГотово (UseReadyConfirmedState = true). Если отсутствует или равно 0, то автоматического перехода не будет. -->
  <add key="AutoGotoReadyConfirmPeriod" value="0"/>
  При переходе блюда в состояние Готово, если установлено время автоматического перехода в состояние ПодтвГотово, то включается таймер обратного отсчета автоматического перехода. Если время автом.перехода = 0, то таймер отображает общее время нахождения блюда в состоянии Готово. При переходе в состояние ПодтвГотово (автоматически или вручную), таймер отображает обратный отсчет времени выноса, если этот параметр не равен 0 (элемент ExpectedTake в KDSServiceAppSettings.config кдс-службы), иначе отображает время ожидания выноса блюда.

  В доступные переходы между состояниями в окне настроек добавлены переходы возврата из ПодтвГотово в Готово и Готовится.
  Исправлен баг при восстановлении отображаемых состояний и доступных переходах из конфиг-файла в случае Особого режима КДСа, когда в конфиге службы происходит переключение от двухэтапного режима Готово в одноэтапный.


[Версия 2.0.0.5]
2017-10-19 Автовозврат в группировку по времени и на первую страницу можно отключить, если установить параметр AutoReturnOrdersGroupByTime в AppSettings.config в 0.


[Версия 2.0.0.4]
2017-10-04 Конфигурационный файл разбит на два файла: конфигурация внешних библиотек (KDSWPFClient.exe.config) и пользовательские настройки (AppSettings.config).
1. При запуске приложения, если в папке приложения нет psw-файла, то он генерируется АВТОМАТИЧЕСКИ в папке приложения.
2. ВНИМАНИЕ!!! Пользовательские настройки вынесены из файла KDSWPFClient.exe.config в файл AppSettings.config !!!
3. ВНИМАНИЕ!!! Имя (или ip-адрес) хоста, на котором запущена КДС-служба указываются в файле AppSettings.config, в строке
	<add key="KDSServiceHostName" value="localhost"/> - вместо localhost указываем имя (или ip-адрес) хоста КДС-службы.
Текстовые документы, напр. данный файл, теперь находятся в папке docs.
2017-10-10 Цвет фона позиций с отложенным автостартом изменен на DeepSkyBlue.


[Версия 2.0.0.3]
2017-09-27 Для устранения "висячих" заголовков заказа (в одной колонке вверху заголовок, в другой - строки заказа) изменена процедура рассчета координат панелей заказов. Этот баг должен уйти, но надо понаблюдать. Заодно, более корректно используются граничные отступы на панели заказов и вертикальный отступ панелей заказов друг от друга.
Легенду цветов таймеров теперь можно закрыть, кликнув в любом месте экрана, а не только по самой легенде.
Немного изменена логика определения ингредиентов в таблице OrderDish: ранее признаком ингредиента было наличие Uid родителя в полях UID и ParentUid проверяемой строки. Сейчас проверяется только поле ParentUid.
Некоторые настройки размещения заказов на экране вынесены в раздел <appSettings> config-файла для возможности клиентской настройки:
 - "OrdersPanelTopBotMargin" - отступ сверху/снизу для панели заказов, в пикселях (по умолчанию 40);
 - "OrderPanelTopMargin" - отступ между заказами по вертикали, в пикселях (по умолчанию 50);
 - "OrderPanelLeftMargin" - отступ между заказами по горизонтали, в долях от ширины панели заказа (по умолчанию 0.15);
 - "OrdersPanelScrollButtonSize" - кнопки прокрутки страниц, в пикселях (по умолчанию 100).
 2017-09-29 Устранен баг проверки наличия psw-файла, при котором на экране отображалось сообщение об отсутствии этого файла без ключа. Теперь и при отсутствии psw-файла, и при неверном psw-файле, в лог записывается ключ, который необходимо передать обслуживающей компании для генерации правильного ключа.
 2017-10-02 Временно приостановлена проверка psw-файла.


2017-09-08 Внесены изменения в config-файл: раздел
    <targets>
      <target name="fileTrace" xsi:type="File" fileName="Logs/KDSClient.log" layout="${date}|${level}|${message}"/>
    </targets>
заменен полностью разделом
    <targets async="true">
      <target name="fileTrace" xsi:type="File" fileName="Logs/KDSClient.log" layout="${date}|${level}|${message}"
              archiveEvery = "Hour" archiveFileName = "Logs/KDSClient {#}.txt" archiveNumbering = "Date" archiveDateFormat="yyyyMMdd HH\h"
              concurrentWrites="false" keepFileOpen="true"/>
    </targets>
Эти изменения позволяют:
- делать записи в лог асинхронно;
- держать файл журнала постоянно открытым;
- каждый час сбрасывать журнал в архив (т.е. за сутки будет 24 файла), уменьшая таким образом файл журнала.


[Версия 2.0.0.2]
2017-09-07 Устранен баг, когда приложение запускалось НЕ из папки приложения, файл e_init.psw не обнаруживался в текущем каталоге и приложение не стартовало. Теперь при старте приложения проверяется текущий каталог и, если надо, устанавливается на папку приложения, в лог производится соответствующая запись.


[Версия 2.0.0.1]
2017-08-30 Изменена работа с логированием:
- в NLog (раздел config-файла) удален журнал dbCommandTracer (fileName="Logs/KDSDBCommands.log"), все сообщения будут писаться в один файл Logs/KDSClient.log, из config-файла удален элемент SingleClientSvcLog;
- элемент IsLogUserAction переименован в IsLogClientAction;
- настройки логирования перенесены из файла NLog.config в секцию nlog config-файла приложения.
Все логируемые события разделены на три категории: стандартные, детальные и пользовательские действия.
1. Стандартные события - начало/окончание работы приложения (системное окружение, настройка), сообщения о критических ошибках.
2. Детальные события - обработка списка заказов, периодически получаемых от службы: фильтрация и сортировка для конкретного клиента, согласно настроек из config-файла, перерисовка заказов на экране.
3. Действия пользователя - обычно клики по различным элементам управления на экране в рамках бизнес-процессов: пункты заказа, заголовок заказа, выбор в окне изменения статуса, запрос к службе на изменение статуса пункта или всего заказа, изменение конфигурации в окне настроек, фильтрация и группировка заказов боковыми кнопками.
Для включения/отключения логирования каждой категории событий, в config-файле имеются соответствующие элементы: 
 - IsWriteTraceMessages - стандартные события;
 - TraceOrdersDetails - детальные события;
 - IsLogClientAction - пользовательские действия.


[Версия 2.0.0.0]
2017-08-10 Добавлена проверка регистрации: в папке приложения должен быть файл e_init.psw и он должен содержать регистрационный номер ПО. Если такого файла нет или он содержит неверный регистрационный номер, то на экране появится сообщение с телефонами для регистрации и приложение не запустится.


[Версия 1.0.0.7]
2017-08-01 Обновлен алгоритм изменения статуса блюд при клике по ЗАГОЛОВКУ ЗАКАЗА: 
 - при выборе нового состояния кликом по заголовку заказа, производится изменение состояния БЛЮД, разрешенных на данном КДСе  вместе с его ингредиентами (или допнаправление печати):
 - если ингредиент имеет разрешенные для этого КДСа цех и статус или блюдо переводится в статус Готово, Выдан или ПодтвОтмены, то при изменении статуса блюда, изменяется и статус этих ингредиентов; иначе изменение статуса родительского блюда не влияет на статус ингредиентов.


[Версия 1.0.0.6]
2017-07-24 Изменен алгоритм определения цвета заголовка заказа при условии, что все блюда/ингредиенты, отображаемые на ДАННОМ КДСе, имеют один и тот же статус. Статус заказа автоматически изменяется В БАЗЕ ДАННЫХ, если ВСЕ блюда данного заказа (а не только те, что отображаются на данном КДСе) перешли в один и тот же статус. Сейчас, если элемент "IsShowOrderStatusByAllShownDishes" config-файла имеет значение true (или 1), то заголовок заказа ОТОБРАЖАЕТСЯ тем же статусом (цветом), что и ВСЕ блюда данного цеха.
Лог запросов к БД (KDSDBCommands.log) сейчас пишется в папку Logs приложения.
2017-07-26 Переделан алгоритм отображения и изменения ингредиентов (или доп.направлений печати):
 - если блюдо имеет ингредиенты, то они отображаются после родительского блюда БЕЗ учета их цеха и статуса;
 - если ингредиент имеет разрешенные для этого КДСа цех и статус или блюдо переводится в статус Готово, Выдан или ПодтвОтмены, то при изменении статуса блюда, изменяется и статус этих ингредиентов; иначе изменение статуса родительского блюда не влияет на статус ингредиентов.


[Версия 1.0.0.5]
2017-07-18 Продолжается поиск решения проблемы синхронизации состояний блюд/заказов, при которой происходит возврат в предыдущее состояние.
В данной версии добавлена блокировка заказа на службе от изменения по таймеру при запросе от клиента на изменение состояния.
Для одновременного логирования работы службы и клиента в config-файле есть элемент
<add key="SingleClientSvcLog" value="true"/>
Если значение true, то создается файл c:\KDSDBCommands.log, в который будет записываться трассировочная информация от клиента.


[Версия 1.0.0.4]
2017-07-14 В заголовке, кроме роли данного КДС, показываются цеха (направления печати), блюда которых будут отображаться на КДСе.
Из заголовка окна удален крестик закрытия окна. При жесте по заголовку окна, оно не меняет своего размера, а только перемещается.


[Версия 1.0.0.3]
2017-07-09 Устранен баг "висячих" заголовков заказа.
2017-07-11 При клике по заголовку заказа, сначала выясняется общий статус всех отображаемых на данном КДСе позиций. И, если он есть, т.е. все отображ.позиции имеют одинаковый статус, то возможные переходы определяются по этому статусу.
2017-07-12 Изменен код для корректного отображения заказов в случае двухэтапного перехода в состояние Готов.
Подкорректирован код размещения панелей заказов: исправлен расчет размеров канвы, высоты панели и перенос панели на след.страницу.


[Версия 1.0.0.2]
2017-07-03 Если необходимо перенести в другой столбец ингредиент, то он переносится вместе с блюдом.
На панели заказа нумеруются только блюда, ингредиенты НЕ нумеруются.
При инициализации приложения, в лог записывается номер запущенной версии.
Добавлена возможность записи в лог действий пользователя, напр. изменение статуса блюда/заказа (префикс сообщения - userAct).


[Версия 1.0.0.1]
2017-06-27 Исправлены ошибки в процедуре группировки заказов по дате создания блюд, что приводило к пропуску обновления экрана в приложении ("зависание" заказов).


[Версия 1.0.0.0]
2017-06-22 Исправлен баг неправильной работы сервиса, когда в заказе есть несколько блюд с одинаковыми UID.
В раздел отладки добавлен элемент "TraceOrdersDetails" (логический) - выводить ли в лог подробные сведения о заказах, получаемых от службы.

2017-06-16 Первый запуск у клиента.

2017-06-08 Доработка функционала для отмененных блюд и ингредиентов.
Доработка функционала для группировки по полю CreateDate БЛЮД, а не ЗАКАЗОВ.

2017-06-07 Закончена RC-версия. Начало тестирования на данных, получаемых из 1С.
