<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!-- behaviors необходим для обнаружения контракта IMetadataExchange,
  который является контрактом конечной точки MEX, а она нужна для чтения метаданных сервисов. 
  Эти метаданные используются хостом и клиентом VS при запуске библиотеки службы, причем
  только по протоколу HTTP!!!
  В этом случае описание конечных точек должно быть в App.config-е библиотеки служ.типов.
  Хост VS при выполнении сервисной операции создает служ.тип, выполняет операцию и уничтожает служ.тип!!
  Т.е. при каждом выполнении операции в клиенте VS служебный тип заново создается!!
  При использовании своего хоста, описание кон.точек должно быть в App.config-е хоста.
  
  Для получения метаданных службы, напр. для Service Reference для http-биндинга надо писать:
          <serviceMetadata httpGetEnabled="True" httpsGetEnabled="True" />
а для net.tcp-биндинга:  <serviceMetadata />   !!!!!
  -->
  <!--<system.serviceModel>
    <services>
      <service name="KDSService.KDSService">
        <host>
          <baseAddresses>
            <add baseAddress="net.tcp://localhost:8733/KDSService/" />
          </baseAddresses>
        </host>
        <endpoint address="" binding="netTcpBinding" contract="KDSService.IKDSService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexTcpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata />
          <serviceDebug includeExceptionDetailInFaults="False" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>-->
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <connectionStrings>
    <add name="DBContext" connectionString="metadata=res://*/DataSource.DBModel.csdl|res://*/DataSource.DBModel.ssdl|res://*/DataSource.DBModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=PRG01;initial catalog=KDS;integrated security=True;MultipleActiveResultSets=True;&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" />
  </system.web>
  <appSettings>
    <!-- отладочные сообщения -->
    <add key="IsWriteTraceMessages" value="true" />
    <add key="IsLogUserAction" value="true" />
    <add key="" value="" />
    <add key="" value="" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>